name: Build deployment image

on:
  workflow_dispatch:
    inputs:
      artifacts_image:
        description: Artifacts Docker image (optional)
        type: string
        required: false
      webapp_image:
        description: Webapp Base Docker image (optional)
        type: string
        required: false

jobs:
  build-images:
    name: Build deployment image and push image tags
    runs-on: ubuntu-latest
    env:
      DEFAULT_ARTIFACTS_IMAGE: ghcr.io/${{ github.repository }}/artifacts:latest
      DEFAULT_WEBAPP_IMAGE: ghcr.io/${{ github.repository }}/webapp-base:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker buildx build
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          driver-opts: network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Autogenerate webapp Docker image tags
        id: autogen-docker-tags
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: ghcr.io/${{ github.repository }}/webapp-deploy
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build deployment image
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: deploy/webapp/webapp-deploy.dockerfile
          tags: ${{ steps.autogen-docker-tags.outputs.tags }}
          build-args: |
            WEBAPP_DOCKER_IMAGE=${{ github.event.inputs.webapp_image || env.DEFAULT_WEBAPP_IMAGE }}
            ARTIFACTS_DOCKER_IMAGE=${{ github.event.inputs.artifacts_image || env.DEFAULT_ARTIFACTS_IMAGE }}
            GITHUB_ACCESS_TOKEN=${{ secrets.PRIVATE_GITHUB_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
          push: true
