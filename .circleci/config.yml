version: 2
jobs:
  qa:
    docker:
        - image: docker:18.09.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker Compose
          command: |
            apk add --no-cache 'py2-pip'
            pip install 'docker-compose==1.23.2'
      - restore_cache:
          keys:
            - v1-docker-{{ .Branch }}
      - run:
          name: Load Docker layers cache
          command: |
            set +o pipefail
            docker load -i ~/docker-layers.tar | true
      - run:
          name: Build Docker images
          command: docker-compose -f docker-compose-prod.yml -p $CIRCLE_PROJECT_REPONAME build
      - run:
          name: Save Docker layers cache
          command: |
            DOCKER_IMAGES=$(docker images --format "{{.Repository}}" --filter=reference="${CIRCLE_PROJECT_REPONAME}_*")
            DOCKER_LAYERS=$(for image in $DOCKER_IMAGES; do docker history $image -q | grep -v missing; done)
            docker save -o ~/docker-layers.tar $DOCKER_LAYERS
      - save_cache:
          key: v1-docker-{{ .Branch }}-{{ epoch }}
          paths:
            - ~/docker-layers.tar
  deploy:
    docker:
    - image: buildpack-deps:trusty-scm
    working_directory: ~/repo
    steps:
    - checkout
    - deploy:
        name: Eldarion Cloud
        command: |
          declare -A INSTANCES=( [master]=primary )
          if [ ${INSTANCES[$CIRCLE_BRANCH]+_} ]; then
            INSTANCE="${INSTANCES[$CIRCLE_BRANCH]}"
          else
            INSTANCE="$CIRCLE_BRANCH"
          fi
          bin/ec/auth.sh
          bin/ec/deploy.sh "$INSTANCE"
          bin/ec/slack-notify.sh "$INSTANCE"
workflows:
  version: 2
  qa-deploy:
    jobs:
    - qa
    - deploy:
        requires:
        - qa
        filters:
          branches:
            only: /(?:master|dev)/
